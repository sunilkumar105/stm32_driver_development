
F767Zxxdriver_dev.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005f0  080001f8  080001f8  000011f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007e8  080007f0  000017f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007e8  080007e8  000017f0  2**0
                  CONTENTS
  4 .ARM          00000000  080007e8  080007e8  000017f0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007e8  080007f0  000017f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007e8  080007e8  000017e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080007ec  080007ec  000017ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000017f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007f0  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007f0  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000017f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008c9  00000000  00000000  0000181e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002cb  00000000  00000000  000020e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  000023b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000073  00000000  00000000  00002460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000020c8  00000000  00000000  000024d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fc0  00000000  00000000  0000459b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009171  00000000  00000000  0000555b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000e6cc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  0000e710  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  0000e8e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	@ (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	@ (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	@ (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	080007d0 	.word	0x080007d0

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	@ (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	@ (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	080007d0 	.word	0x080007d0

08000238 <delay>:
#include "F767Zxx_gpio_driver.h"
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay() {
 8000238:	b490      	push	{r4, r7}
 800023a:	b082      	sub	sp, #8
 800023c:	af00      	add	r7, sp, #0
	for (uint64_t i = 0; i < 200000; i++)
 800023e:	f04f 0200 	mov.w	r2, #0
 8000242:	f04f 0300 	mov.w	r3, #0
 8000246:	e9c7 2300 	strd	r2, r3, [r7]
 800024a:	e006      	b.n	800025a <delay+0x22>
 800024c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000250:	1c50      	adds	r0, r2, #1
 8000252:	f143 0100 	adc.w	r1, r3, #0
 8000256:	e9c7 0100 	strd	r0, r1, [r7]
 800025a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800025e:	4c05      	ldr	r4, [pc, #20]	@ (8000274 <delay+0x3c>)
 8000260:	42a2      	cmp	r2, r4
 8000262:	f173 0300 	sbcs.w	r3, r3, #0
 8000266:	d3f1      	bcc.n	800024c <delay+0x14>
		;
}
 8000268:	bf00      	nop
 800026a:	bf00      	nop
 800026c:	3708      	adds	r7, #8
 800026e:	46bd      	mov	sp, r7
 8000270:	bc90      	pop	{r4, r7}
 8000272:	4770      	bx	lr
 8000274:	00030d40 	.word	0x00030d40

08000278 <main>:

int main(void) {
 8000278:	b580      	push	{r7, lr}
 800027a:	b088      	sub	sp, #32
 800027c:	af00      	add	r7, sp, #0

	GPIO_PeriClockControl(GPIOB, ENABLE);
 800027e:	2101      	movs	r1, #1
 8000280:	481e      	ldr	r0, [pc, #120]	@ (80002fc <main+0x84>)
 8000282:	f000 f869 	bl	8000358 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000286:	2101      	movs	r1, #1
 8000288:	481d      	ldr	r0, [pc, #116]	@ (8000300 <main+0x88>)
 800028a:	f000 f865 	bl	8000358 <GPIO_PeriClockControl>

	GPIO_Handle_t gpioLed;
	gpioLed.pGPIOx = GPIOB;
 800028e:	4b1b      	ldr	r3, [pc, #108]	@ (80002fc <main+0x84>)
 8000290:	613b      	str	r3, [r7, #16]
	gpioLed.GPIO_PinConfig.GPIO_Pinumber = GPIO_PIN_NO_7;
 8000292:	2307      	movs	r3, #7
 8000294:	753b      	strb	r3, [r7, #20]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000296:	2301      	movs	r3, #1
 8000298:	757b      	strb	r3, [r7, #21]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800029a:	2302      	movs	r3, #2
 800029c:	75bb      	strb	r3, [r7, #22]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800029e:	2300      	movs	r3, #0
 80002a0:	763b      	strb	r3, [r7, #24]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 80002a2:	2300      	movs	r3, #0
 80002a4:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(&gpioLed);
 80002a6:	f107 0310 	add.w	r3, r7, #16
 80002aa:	4618      	mov	r0, r3
 80002ac:	f000 f962 	bl	8000574 <GPIO_Init>

	GPIO_Handle_t gpioBtn;
	gpioBtn.pGPIOx = GPIOC;
 80002b0:	4b13      	ldr	r3, [pc, #76]	@ (8000300 <main+0x88>)
 80002b2:	607b      	str	r3, [r7, #4]
	gpioBtn.GPIO_PinConfig.GPIO_Pinumber = GPIO_PIN_NO_13;
 80002b4:	230d      	movs	r3, #13
 80002b6:	723b      	strb	r3, [r7, #8]
	gpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80002b8:	2300      	movs	r3, #0
 80002ba:	727b      	strb	r3, [r7, #9]
	gpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80002bc:	2302      	movs	r3, #2
 80002be:	72bb      	strb	r3, [r7, #10]
	gpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 80002c0:	2300      	movs	r3, #0
 80002c2:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(&gpioBtn);
 80002c4:	1d3b      	adds	r3, r7, #4
 80002c6:	4618      	mov	r0, r3
 80002c8:	f000 f954 	bl	8000574 <GPIO_Init>

	while (1) {
		uint8_t GPIO_STATUS = GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13);
 80002cc:	210d      	movs	r1, #13
 80002ce:	480c      	ldr	r0, [pc, #48]	@ (8000300 <main+0x88>)
 80002d0:	f000 fa1d 	bl	800070e <GPIO_ReadFromInputPin>
 80002d4:	4603      	mov	r3, r0
 80002d6:	77fb      	strb	r3, [r7, #31]

		if (GPIO_STATUS) {
 80002d8:	7ffb      	ldrb	r3, [r7, #31]
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d005      	beq.n	80002ea <main+0x72>
			GPIO_WriteToOutputPin(GPIOB, GPIO_PIN_NO_7, 1);
 80002de:	2201      	movs	r2, #1
 80002e0:	2107      	movs	r1, #7
 80002e2:	4806      	ldr	r0, [pc, #24]	@ (80002fc <main+0x84>)
 80002e4:	f000 fa2b 	bl	800073e <GPIO_WriteToOutputPin>
 80002e8:	e004      	b.n	80002f4 <main+0x7c>
		} else {
			GPIO_WriteToOutputPin(GPIOB, GPIO_PIN_NO_7, 0);
 80002ea:	2200      	movs	r2, #0
 80002ec:	2107      	movs	r1, #7
 80002ee:	4803      	ldr	r0, [pc, #12]	@ (80002fc <main+0x84>)
 80002f0:	f000 fa25 	bl	800073e <GPIO_WriteToOutputPin>
		}
		delay();
 80002f4:	f7ff ffa0 	bl	8000238 <delay>
	while (1) {
 80002f8:	e7e8      	b.n	80002cc <main+0x54>
 80002fa:	bf00      	nop
 80002fc:	40020400 	.word	0x40020400
 8000300:	40020800 	.word	0x40020800

08000304 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000304:	480d      	ldr	r0, [pc, #52]	@ (800033c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000306:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000308:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800030c:	480c      	ldr	r0, [pc, #48]	@ (8000340 <LoopForever+0x6>)
  ldr r1, =_edata
 800030e:	490d      	ldr	r1, [pc, #52]	@ (8000344 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000310:	4a0d      	ldr	r2, [pc, #52]	@ (8000348 <LoopForever+0xe>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000314:	e002      	b.n	800031c <LoopCopyDataInit>

08000316 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000316:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000318:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031a:	3304      	adds	r3, #4

0800031c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800031c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000320:	d3f9      	bcc.n	8000316 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000322:	4a0a      	ldr	r2, [pc, #40]	@ (800034c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000324:	4c0a      	ldr	r4, [pc, #40]	@ (8000350 <LoopForever+0x16>)
  movs r3, #0
 8000326:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000328:	e001      	b.n	800032e <LoopFillZerobss>

0800032a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800032c:	3204      	adds	r2, #4

0800032e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000330:	d3fb      	bcc.n	800032a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000332:	f000 fa29 	bl	8000788 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000336:	f7ff ff9f 	bl	8000278 <main>

0800033a <LoopForever>:

LoopForever:
  b LoopForever
 800033a:	e7fe      	b.n	800033a <LoopForever>
  ldr   r0, =_estack
 800033c:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000340:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000344:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000348:	080007f0 	.word	0x080007f0
  ldr r2, =_sbss
 800034c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000350:	2000001c 	.word	0x2000001c

08000354 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000354:	e7fe      	b.n	8000354 <ADC_IRQHandler>
	...

08000358 <GPIO_PeriClockControl>:
 * @return 					- None
 *
 * @NOte					- None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t ENorDI) {
 8000358:	b480      	push	{r7}
 800035a:	b083      	sub	sp, #12
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
 8000360:	460b      	mov	r3, r1
 8000362:	70fb      	strb	r3, [r7, #3]
	if (ENorDI == ENABLE) {
 8000364:	78fb      	ldrb	r3, [r7, #3]
 8000366:	2b01      	cmp	r3, #1
 8000368:	d178      	bne.n	800045c <GPIO_PeriClockControl+0x104>
		if (pGPIOx == GPIOA) {
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a75      	ldr	r2, [pc, #468]	@ (8000544 <GPIO_PeriClockControl+0x1ec>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000372:	4b75      	ldr	r3, [pc, #468]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000376:	4a74      	ldr	r2, [pc, #464]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000378:	f043 0301 	orr.w	r3, r3, #1
 800037c:	6313      	str	r3, [r2, #48]	@ 0x30
		}
		if (pGPIOx == GPIOK) {
			GPIOK_PCLK_DI();
		}
	}
}
 800037e:	e0db      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOB) {
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a72      	ldr	r2, [pc, #456]	@ (800054c <GPIO_PeriClockControl+0x1f4>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000388:	4b6f      	ldr	r3, [pc, #444]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038c:	4a6e      	ldr	r2, [pc, #440]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800038e:	f043 0302 	orr.w	r3, r3, #2
 8000392:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000394:	e0d0      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOC) {
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a6d      	ldr	r2, [pc, #436]	@ (8000550 <GPIO_PeriClockControl+0x1f8>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800039e:	4b6a      	ldr	r3, [pc, #424]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a2:	4a69      	ldr	r2, [pc, #420]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003a4:	f043 0304 	orr.w	r3, r3, #4
 80003a8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003aa:	e0c5      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOD) {
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a69      	ldr	r2, [pc, #420]	@ (8000554 <GPIO_PeriClockControl+0x1fc>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80003b4:	4b64      	ldr	r3, [pc, #400]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b8:	4a63      	ldr	r2, [pc, #396]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003ba:	f043 0308 	orr.w	r3, r3, #8
 80003be:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c0:	e0ba      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOE) {
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a64      	ldr	r2, [pc, #400]	@ (8000558 <GPIO_PeriClockControl+0x200>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003ca:	4b5f      	ldr	r3, [pc, #380]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ce:	4a5e      	ldr	r2, [pc, #376]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003d0:	f043 0310 	orr.w	r3, r3, #16
 80003d4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d6:	e0af      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOF) {
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a60      	ldr	r2, [pc, #384]	@ (800055c <GPIO_PeriClockControl+0x204>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d106      	bne.n	80003ee <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003e0:	4b59      	ldr	r3, [pc, #356]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e4:	4a58      	ldr	r2, [pc, #352]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003e6:	f043 0320 	orr.w	r3, r3, #32
 80003ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ec:	e0a4      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOG) {
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a5b      	ldr	r2, [pc, #364]	@ (8000560 <GPIO_PeriClockControl+0x208>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003f6:	4b54      	ldr	r3, [pc, #336]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fa:	4a53      	ldr	r2, [pc, #332]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80003fc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000400:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000402:	e099      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOH) {
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a57      	ldr	r2, [pc, #348]	@ (8000564 <GPIO_PeriClockControl+0x20c>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800040c:	4b4e      	ldr	r3, [pc, #312]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000410:	4a4d      	ldr	r2, [pc, #308]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000412:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000416:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000418:	e08e      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOI) {
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a52      	ldr	r2, [pc, #328]	@ (8000568 <GPIO_PeriClockControl+0x210>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 8000422:	4b49      	ldr	r3, [pc, #292]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000426:	4a48      	ldr	r2, [pc, #288]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000428:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800042c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800042e:	e083      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOJ) {
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a4e      	ldr	r2, [pc, #312]	@ (800056c <GPIO_PeriClockControl+0x214>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d106      	bne.n	8000446 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 8000438:	4b43      	ldr	r3, [pc, #268]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043c:	4a42      	ldr	r2, [pc, #264]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800043e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000442:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000444:	e078      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		} else if (pGPIOx == GPIOK) {
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4a49      	ldr	r2, [pc, #292]	@ (8000570 <GPIO_PeriClockControl+0x218>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d174      	bne.n	8000538 <GPIO_PeriClockControl+0x1e0>
			GPIOK_PCLK_EN();
 800044e:	4b3e      	ldr	r3, [pc, #248]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000452:	4a3d      	ldr	r2, [pc, #244]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000454:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000458:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045a:	e06d      	b.n	8000538 <GPIO_PeriClockControl+0x1e0>
		if (pGPIOx == GPIOA) {
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	4a39      	ldr	r2, [pc, #228]	@ (8000544 <GPIO_PeriClockControl+0x1ec>)
 8000460:	4293      	cmp	r3, r2
 8000462:	d105      	bne.n	8000470 <GPIO_PeriClockControl+0x118>
			GPIOA_PCLK_DI();
 8000464:	4b38      	ldr	r3, [pc, #224]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000466:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000468:	4a37      	ldr	r2, [pc, #220]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800046a:	f023 0301 	bic.w	r3, r3, #1
 800046e:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOB) {
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a36      	ldr	r2, [pc, #216]	@ (800054c <GPIO_PeriClockControl+0x1f4>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d105      	bne.n	8000484 <GPIO_PeriClockControl+0x12c>
			GPIOB_PCLK_DI();
 8000478:	4b33      	ldr	r3, [pc, #204]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800047c:	4a32      	ldr	r2, [pc, #200]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800047e:	f023 0302 	bic.w	r3, r3, #2
 8000482:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOC) {
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	4a32      	ldr	r2, [pc, #200]	@ (8000550 <GPIO_PeriClockControl+0x1f8>)
 8000488:	4293      	cmp	r3, r2
 800048a:	d105      	bne.n	8000498 <GPIO_PeriClockControl+0x140>
			GPIOC_PCLK_DI();
 800048c:	4b2e      	ldr	r3, [pc, #184]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800048e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000490:	4a2d      	ldr	r2, [pc, #180]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000492:	f023 0304 	bic.w	r3, r3, #4
 8000496:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOD) {
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	4a2e      	ldr	r2, [pc, #184]	@ (8000554 <GPIO_PeriClockControl+0x1fc>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d105      	bne.n	80004ac <GPIO_PeriClockControl+0x154>
			GPIOD_PCLK_DI();
 80004a0:	4b29      	ldr	r3, [pc, #164]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a4:	4a28      	ldr	r2, [pc, #160]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004a6:	f023 0308 	bic.w	r3, r3, #8
 80004aa:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOE) {
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a2a      	ldr	r2, [pc, #168]	@ (8000558 <GPIO_PeriClockControl+0x200>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d105      	bne.n	80004c0 <GPIO_PeriClockControl+0x168>
			GPIOE_PCLK_DI();
 80004b4:	4b24      	ldr	r3, [pc, #144]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004b8:	4a23      	ldr	r2, [pc, #140]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004ba:	f023 0310 	bic.w	r3, r3, #16
 80004be:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOF) {
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	4a26      	ldr	r2, [pc, #152]	@ (800055c <GPIO_PeriClockControl+0x204>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d105      	bne.n	80004d4 <GPIO_PeriClockControl+0x17c>
			GPIOF_PCLK_DI();
 80004c8:	4b1f      	ldr	r3, [pc, #124]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004cc:	4a1e      	ldr	r2, [pc, #120]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004ce:	f023 0320 	bic.w	r3, r3, #32
 80004d2:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOG) {
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a22      	ldr	r2, [pc, #136]	@ (8000560 <GPIO_PeriClockControl+0x208>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d105      	bne.n	80004e8 <GPIO_PeriClockControl+0x190>
			GPIOG_PCLK_DI();
 80004dc:	4b1a      	ldr	r3, [pc, #104]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e0:	4a19      	ldr	r2, [pc, #100]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004e2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80004e6:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOH) {
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	4a1e      	ldr	r2, [pc, #120]	@ (8000564 <GPIO_PeriClockControl+0x20c>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d105      	bne.n	80004fc <GPIO_PeriClockControl+0x1a4>
			GPIOH_PCLK_DI();
 80004f0:	4b15      	ldr	r3, [pc, #84]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f4:	4a14      	ldr	r2, [pc, #80]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 80004f6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004fa:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOI) {
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	4a1a      	ldr	r2, [pc, #104]	@ (8000568 <GPIO_PeriClockControl+0x210>)
 8000500:	4293      	cmp	r3, r2
 8000502:	d105      	bne.n	8000510 <GPIO_PeriClockControl+0x1b8>
			GPIOI_PCLK_DI();
 8000504:	4b10      	ldr	r3, [pc, #64]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000506:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000508:	4a0f      	ldr	r2, [pc, #60]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800050a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800050e:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOJ) {
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	4a16      	ldr	r2, [pc, #88]	@ (800056c <GPIO_PeriClockControl+0x214>)
 8000514:	4293      	cmp	r3, r2
 8000516:	d105      	bne.n	8000524 <GPIO_PeriClockControl+0x1cc>
			GPIOJ_PCLK_DI();
 8000518:	4b0b      	ldr	r3, [pc, #44]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800051a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800051c:	4a0a      	ldr	r2, [pc, #40]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800051e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000522:	6313      	str	r3, [r2, #48]	@ 0x30
		if (pGPIOx == GPIOK) {
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	4a12      	ldr	r2, [pc, #72]	@ (8000570 <GPIO_PeriClockControl+0x218>)
 8000528:	4293      	cmp	r3, r2
 800052a:	d105      	bne.n	8000538 <GPIO_PeriClockControl+0x1e0>
			GPIOK_PCLK_DI();
 800052c:	4b06      	ldr	r3, [pc, #24]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 800052e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000530:	4a05      	ldr	r2, [pc, #20]	@ (8000548 <GPIO_PeriClockControl+0x1f0>)
 8000532:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000536:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000538:	bf00      	nop
 800053a:	370c      	adds	r7, #12
 800053c:	46bd      	mov	sp, r7
 800053e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000542:	4770      	bx	lr
 8000544:	40020000 	.word	0x40020000
 8000548:	40023800 	.word	0x40023800
 800054c:	40020400 	.word	0x40020400
 8000550:	40020800 	.word	0x40020800
 8000554:	40020c00 	.word	0x40020c00
 8000558:	40021000 	.word	0x40021000
 800055c:	40021400 	.word	0x40021400
 8000560:	40021800 	.word	0x40021800
 8000564:	40021c00 	.word	0x40021c00
 8000568:	40022000 	.word	0x40022000
 800056c:	40022400 	.word	0x40022400
 8000570:	40022800 	.word	0x40022800

08000574 <GPIO_Init>:
 *
 * @NOte					-
 *
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000574:	b480      	push	{r7}
 8000576:	b085      	sub	sp, #20
 8000578:	af00      	add	r7, sp, #0
 800057a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // temporary register
 800057c:	2300      	movs	r3, #0
 800057e:	60fb      	str	r3, [r7, #12]

	//1. CONFIGURE MODE OF GPIO PIN

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	795b      	ldrb	r3, [r3, #5]
 8000584:	2b03      	cmp	r3, #3
 8000586:	d81f      	bhi.n	80005c8 <GPIO_Init+0x54>
		//Means the mode is non-interrupt mode
		//Mode will be actual pin-mode positioned at the location with two bit
		//we can left shift the temporary register by the mode by the pos = pinNumber x 2
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	795b      	ldrb	r3, [r3, #5]
 800058c:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	005b      	lsls	r3, r3, #1
 8000594:	fa02 f303 	lsl.w	r3, r2, r3
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 8000598:	60fb      	str	r3, [r7, #12]
		//clearing reg
		pGPIOHandle->pGPIOx->MODER &= ~(0b11
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	681a      	ldr	r2, [r3, #0]
				<< 2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	005b      	lsls	r3, r3, #1
 80005a6:	2103      	movs	r1, #3
 80005a8:	fa01 f303 	lsl.w	r3, r1, r3
		pGPIOHandle->pGPIOx->MODER &= ~(0b11
 80005ac:	43db      	mvns	r3, r3
 80005ae:	4619      	mov	r1, r3
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	400a      	ands	r2, r1
 80005b6:	601a      	str	r2, [r3, #0]
		//writing reg
		pGPIOHandle->pGPIOx->MODER |= temp;
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	6819      	ldr	r1, [r3, #0]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	68fa      	ldr	r2, [r7, #12]
 80005c4:	430a      	orrs	r2, r1
 80005c6:	601a      	str	r2, [r3, #0]
	} else {
		//Means the mode is interrupt, will code it later
	}

	temp = 0;
 80005c8:	2300      	movs	r3, #0
 80005ca:	60fb      	str	r3, [r7, #12]
	//2. CONFIGURE THE SPEED
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	799b      	ldrb	r3, [r3, #6]
 80005d0:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	005b      	lsls	r3, r3, #1
 80005d8:	fa02 f303 	lsl.w	r3, r2, r3
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 80005dc:	60fb      	str	r3, [r7, #12]
	//clearing reg
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0b11
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	689a      	ldr	r2, [r3, #8]
			<< 2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	791b      	ldrb	r3, [r3, #4]
 80005e8:	005b      	lsls	r3, r3, #1
 80005ea:	2103      	movs	r1, #3
 80005ec:	fa01 f303 	lsl.w	r3, r1, r3
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0b11
 80005f0:	43db      	mvns	r3, r3
 80005f2:	4619      	mov	r1, r3
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	400a      	ands	r2, r1
 80005fa:	609a      	str	r2, [r3, #8]
	//setting reg
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	6899      	ldr	r1, [r3, #8]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	68fa      	ldr	r2, [r7, #12]
 8000608:	430a      	orrs	r2, r1
 800060a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800060c:	2300      	movs	r3, #0
 800060e:	60fb      	str	r3, [r7, #12]
	//3. CONFIGURE THE PUPD REGISTERS
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	79db      	ldrb	r3, [r3, #7]
 8000614:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	005b      	lsls	r3, r3, #1
 800061c:	fa02 f303 	lsl.w	r3, r2, r3
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 8000620:	60fb      	str	r3, [r7, #12]
	//clearing reg
	pGPIOHandle->pGPIOx->PUPDR &= ~(0b11
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	68da      	ldr	r2, [r3, #12]
			<< 2 * pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	005b      	lsls	r3, r3, #1
 800062e:	2103      	movs	r1, #3
 8000630:	fa01 f303 	lsl.w	r3, r1, r3
	pGPIOHandle->pGPIOx->PUPDR &= ~(0b11
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	400a      	ands	r2, r1
 800063e:	60da      	str	r2, [r3, #12]
	//setting reg
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	68d9      	ldr	r1, [r3, #12]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	68fa      	ldr	r2, [r7, #12]
 800064c:	430a      	orrs	r2, r1
 800064e:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000650:	2300      	movs	r3, #0
 8000652:	60fb      	str	r3, [r7, #12]
	//4. CONFIGURE THE OUTPUT TYPE
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	7a1b      	ldrb	r3, [r3, #8]
 8000658:	461a      	mov	r2, r3
			<< pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber;
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	791b      	ldrb	r3, [r3, #4]
 800065e:	fa02 f303 	lsl.w	r3, r2, r3
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 8000662:	60fb      	str	r3, [r7, #12]
	//clearing reg
	pGPIOHandle->pGPIOx->OTYPER &= ~(0b1
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	685a      	ldr	r2, [r3, #4]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber);
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	791b      	ldrb	r3, [r3, #4]
 800066e:	4619      	mov	r1, r3
 8000670:	2301      	movs	r3, #1
 8000672:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OTYPER &= ~(0b1
 8000674:	43db      	mvns	r3, r3
 8000676:	4619      	mov	r1, r3
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	400a      	ands	r2, r1
 800067e:	605a      	str	r2, [r3, #4]
	//setting reg
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	6859      	ldr	r1, [r3, #4]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	68fa      	ldr	r2, [r7, #12]
 800068c:	430a      	orrs	r2, r1
 800068e:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000690:	2300      	movs	r3, #0
 8000692:	60fb      	str	r3, [r7, #12]
	//5. CONFIGURE THE ALTERNATE FUNCTIONALITY
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFN) { //If the mode is alternate function, then only configure the alternate function
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	795b      	ldrb	r3, [r3, #5]
 8000698:	2b02      	cmp	r3, #2
 800069a:	d832      	bhi.n	8000702 <GPIO_Init+0x18e>

		uint8_t AFR_REG, POS;
		AFR_REG = pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber / 8;
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	791b      	ldrb	r3, [r3, #4]
 80006a0:	08db      	lsrs	r3, r3, #3
 80006a2:	72fb      	strb	r3, [r7, #11]
		POS = pGPIOHandle->GPIO_PinConfig.GPIO_Pinumber % 8;
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	791b      	ldrb	r3, [r3, #4]
 80006a8:	f003 0307 	and.w	r3, r3, #7
 80006ac:	72bb      	strb	r3, [r7, #10]
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * POS);
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	7a5b      	ldrb	r3, [r3, #9]
 80006b2:	461a      	mov	r2, r3
 80006b4:	7abb      	ldrb	r3, [r7, #10]
 80006b6:	009b      	lsls	r3, r3, #2
 80006b8:	fa02 f303 	lsl.w	r3, r2, r3
 80006bc:	60fb      	str	r3, [r7, #12]

		//clearing reg
		pGPIOHandle->pGPIOx->AFR[AFR_REG] &= ~(0b1111 << 4 * POS);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	7afa      	ldrb	r2, [r7, #11]
 80006c4:	3208      	adds	r2, #8
 80006c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ca:	7abb      	ldrb	r3, [r7, #10]
 80006cc:	009b      	lsls	r3, r3, #2
 80006ce:	220f      	movs	r2, #15
 80006d0:	fa02 f303 	lsl.w	r3, r2, r3
 80006d4:	43db      	mvns	r3, r3
 80006d6:	4618      	mov	r0, r3
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	7afa      	ldrb	r2, [r7, #11]
 80006de:	4001      	ands	r1, r0
 80006e0:	3208      	adds	r2, #8
 80006e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		//setting reg
		pGPIOHandle->pGPIOx->AFR[AFR_REG] |= temp;
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	7afa      	ldrb	r2, [r7, #11]
 80006ec:	3208      	adds	r2, #8
 80006ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	7afa      	ldrb	r2, [r7, #11]
 80006f8:	68f9      	ldr	r1, [r7, #12]
 80006fa:	4301      	orrs	r1, r0
 80006fc:	3208      	adds	r2, #8
 80006fe:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 8000702:	bf00      	nop
 8000704:	3714      	adds	r7, #20
 8000706:	46bd      	mov	sp, r7
 8000708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070c:	4770      	bx	lr

0800070e <GPIO_ReadFromInputPin>:
 * @return 					- 0 or 1
 *
 * @NOte					-
 *
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber) {
 800070e:	b480      	push	{r7}
 8000710:	b085      	sub	sp, #20
 8000712:	af00      	add	r7, sp, #0
 8000714:	6078      	str	r0, [r7, #4]
 8000716:	460b      	mov	r3, r1
 8000718:	70fb      	strb	r3, [r7, #3]
	uint8_t value = 0;
 800071a:	2300      	movs	r3, #0
 800071c:	73fb      	strb	r3, [r7, #15]
	value = (uint8_t) ((pGPIOx->IDR >> pinNumber) & 0x00000001);
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	691a      	ldr	r2, [r3, #16]
 8000722:	78fb      	ldrb	r3, [r7, #3]
 8000724:	fa22 f303 	lsr.w	r3, r2, r3
 8000728:	b2db      	uxtb	r3, r3
 800072a:	f003 0301 	and.w	r3, r3, #1
 800072e:	73fb      	strb	r3, [r7, #15]
	return value;
 8000730:	7bfb      	ldrb	r3, [r7, #15]
}
 8000732:	4618      	mov	r0, r3
 8000734:	3714      	adds	r7, #20
 8000736:	46bd      	mov	sp, r7
 8000738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800073c:	4770      	bx	lr

0800073e <GPIO_WriteToOutputPin>:
 *
 * @NOte					-
 *
 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber,
		uint8_t value) {
 800073e:	b480      	push	{r7}
 8000740:	b083      	sub	sp, #12
 8000742:	af00      	add	r7, sp, #0
 8000744:	6078      	str	r0, [r7, #4]
 8000746:	460b      	mov	r3, r1
 8000748:	70fb      	strb	r3, [r7, #3]
 800074a:	4613      	mov	r3, r2
 800074c:	70bb      	strb	r3, [r7, #2]
	if (value == GPIO_PIN_SET) {
 800074e:	78bb      	ldrb	r3, [r7, #2]
 8000750:	2b01      	cmp	r3, #1
 8000752:	d109      	bne.n	8000768 <GPIO_WriteToOutputPin+0x2a>
		//WRITE 1 AT THE ODR REGISTER AT THE BIT FIELD CORRESPONDING TO THE PINN NUMBER
		pGPIOx->ODR |= (0b1 << pinNumber);
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	695b      	ldr	r3, [r3, #20]
 8000758:	78fa      	ldrb	r2, [r7, #3]
 800075a:	2101      	movs	r1, #1
 800075c:	fa01 f202 	lsl.w	r2, r1, r2
 8000760:	431a      	orrs	r2, r3
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	615a      	str	r2, [r3, #20]
	} else {
		pGPIOx->ODR &= ~(0b1 << pinNumber);
	}
}
 8000766:	e009      	b.n	800077c <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(0b1 << pinNumber);
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	695b      	ldr	r3, [r3, #20]
 800076c:	78fa      	ldrb	r2, [r7, #3]
 800076e:	2101      	movs	r1, #1
 8000770:	fa01 f202 	lsl.w	r2, r1, r2
 8000774:	43d2      	mvns	r2, r2
 8000776:	401a      	ands	r2, r3
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	615a      	str	r2, [r3, #20]
}
 800077c:	bf00      	nop
 800077e:	370c      	adds	r7, #12
 8000780:	46bd      	mov	sp, r7
 8000782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000786:	4770      	bx	lr

08000788 <__libc_init_array>:
 8000788:	b570      	push	{r4, r5, r6, lr}
 800078a:	4d0d      	ldr	r5, [pc, #52]	@ (80007c0 <__libc_init_array+0x38>)
 800078c:	4c0d      	ldr	r4, [pc, #52]	@ (80007c4 <__libc_init_array+0x3c>)
 800078e:	1b64      	subs	r4, r4, r5
 8000790:	10a4      	asrs	r4, r4, #2
 8000792:	2600      	movs	r6, #0
 8000794:	42a6      	cmp	r6, r4
 8000796:	d109      	bne.n	80007ac <__libc_init_array+0x24>
 8000798:	4d0b      	ldr	r5, [pc, #44]	@ (80007c8 <__libc_init_array+0x40>)
 800079a:	4c0c      	ldr	r4, [pc, #48]	@ (80007cc <__libc_init_array+0x44>)
 800079c:	f000 f818 	bl	80007d0 <_init>
 80007a0:	1b64      	subs	r4, r4, r5
 80007a2:	10a4      	asrs	r4, r4, #2
 80007a4:	2600      	movs	r6, #0
 80007a6:	42a6      	cmp	r6, r4
 80007a8:	d105      	bne.n	80007b6 <__libc_init_array+0x2e>
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80007b0:	4798      	blx	r3
 80007b2:	3601      	adds	r6, #1
 80007b4:	e7ee      	b.n	8000794 <__libc_init_array+0xc>
 80007b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ba:	4798      	blx	r3
 80007bc:	3601      	adds	r6, #1
 80007be:	e7f2      	b.n	80007a6 <__libc_init_array+0x1e>
 80007c0:	080007e8 	.word	0x080007e8
 80007c4:	080007e8 	.word	0x080007e8
 80007c8:	080007e8 	.word	0x080007e8
 80007cc:	080007ec 	.word	0x080007ec

080007d0 <_init>:
 80007d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007d2:	bf00      	nop
 80007d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007d6:	bc08      	pop	{r3}
 80007d8:	469e      	mov	lr, r3
 80007da:	4770      	bx	lr

080007dc <_fini>:
 80007dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007de:	bf00      	nop
 80007e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007e2:	bc08      	pop	{r3}
 80007e4:	469e      	mov	lr, r3
 80007e6:	4770      	bx	lr
